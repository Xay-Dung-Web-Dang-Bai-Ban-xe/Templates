import React, { useState } from "react";
import { FaUsers, FaNewspaper, FaExchangeAlt, FaFilter, FaBox, FaBullhorn, FaChartLine, FaShieldAlt, FaBell, FaHeadset, FaCog, FaLock, FaSignOutAlt, FaEdit, FaTrash, FaTimes } from "react-icons/fa";

const AdminDashboard = () => {
  const [activeView, setActiveView] = useState("users");
  const [selectedUser, setSelectedUser] = useState(null);

  const sidebarItems = [
    { icon: FaUsers, text: "Tài khoản", view: "users" },
    { icon: FaNewspaper, text: "Bài viết", view: "posts" },
    { icon: FaExchangeAlt, text: "Giao dịch", view: "transactions" },
    { icon: FaFilter, text: "Danh mục", view: "categories" },
    { icon: FaBox, text: "Package and Promotion", view: "packages" },
    { icon: FaChartLine, text: "Site Analytics", view: "analytics" },
    { icon: FaShieldAlt, text: "Content Moderation", view: "moderation" },
    { icon: FaBell, text: "Thông báo", view: "notifications" },
    { icon: FaHeadset, text: "Hỗ trợ & Feedback", view: "support" },
    { icon: FaCog, text: "Cài đặt hệ thống", view: "settings" },
    { icon: FaLock, text: "Bảo mật", view: "security" },
    { icon: FaSignOutAlt, text: "Đăng xuất", view: "logout" }
  ];

  const renderView = () => {
    switch (activeView) {
      case "users":
        return <UserManagement setSelectedUser={setSelectedUser} />;
      case "posts":
        return <PostManagement />;
      case "transactions":
        return <TransactionManagement />;
      case "categories":
        return <CategoryManagement />;
      case "packages":
        return <PackageManagement />;
      case "analytics":
        return <SiteAnalytics />;
      case "moderation":
        return <ContentModeration />;
      case "notifications":
        return <NotificationManagement />;
      case "support":
        return <SupportFeedback />;
      case "settings":
        return <SystemSettings />;
      case "security":
        return <SecurityAccessControl />;
      case "logout":
        return <Logout />;
      default:
        return <div>Select a view from the sidebar</div>;
    }
  };

  return (
    <div className="flex h-screen bg-gray-100">
      <div className="w-64 bg-white shadow-md">
        <div className="p-4">
          <h2 className="text-2xl font-semibold text-gray-800">Admin Dashboard</h2>
        </div>
        <nav className="mt-4">
          {sidebarItems.map((item, index) => (
            <button
              key={index}
              className={`w-full text-left px-4 py-2 flex items-center space-x-2 hover:bg-gray-200 ${activeView === item.view ? 'bg-gray-200' : ''}`}
              onClick={() => setActiveView(item.view)}
            >
              <item.icon className="text-gray-600" />
              <span>{item.text}</span>
            </button>
          ))}
        </nav>
      </div>
      <div className="flex-1 p-10 overflow-auto">
        <h1 className="text-3xl font-bold mb-6">{sidebarItems.find(item => item.view === activeView)?.text}</h1>
        {renderView()}
      </div>
      {selectedUser && (
        <UserInfoModal user={selectedUser} onClose={() => setSelectedUser(null)} />
      )}
    </div>
  );
};

const UserManagement = ({ setSelectedUser }) => {
  const users = [
    { id: 1, username: "john_doe", name: "John Doe", email: "john@example.com", phone: "+1234567890" },
    { id: 2, username: "jane_smith", name: "Jane Smith", email: "jane@example.com", phone: "+1987654321" },
    { id: 3, username: "bob_johnson", name: "Bob Johnson", email: "bob@example.com", phone: "+1122334455" },
  ];

  return (
    <div className="bg-white shadow rounded-lg p-6">
      <h2 className="text-xl font-semibold mb-4">User Management</h2>
      <table className="min-w-full divide-y divide-gray-200">
        <thead className="bg-gray-50">
          <tr>
            <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Username</th>
            <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Name</th>
            <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Email</th>
            <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Phone</th>
            <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
          </tr>
        </thead>
        <tbody className="bg-white divide-y divide-gray-200">
          {users.map((user) => (
            <tr key={user.id} className="hover:bg-gray-100">
              <td className="px-6 py-4 whitespace-nowrap">{user.username}</td>
              <td className="px-6 py-4 whitespace-nowrap">{user.name}</td>
              <td className="px-6 py-4 whitespace-nowrap">{user.email}</td>
              <td className="px-6 py-4 whitespace-nowrap">{user.phone}</td>
              <td className="px-6 py-4 whitespace-nowrap">
                <button
                  className="text-blue-600 hover:text-blue-900 mr-2"
                  onClick={() => setSelectedUser(user)}
                >
                  View
                </button>
                <button className="text-green-600 hover:text-green-900 mr-2">
                  <FaEdit />
                </button>
                <button className="text-red-600 hover:text-red-900">
                  <FaTrash />
                </button>
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
};

const UserInfoModal = ({ user, onClose }) => {
  return (
    <div className="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full flex items-center justify-center">
      <div className="bg-white p-8 rounded-lg shadow-xl relative">
        <button
          className="absolute top-2 right-2 text-gray-600 hover:text-gray-800"
          onClick={onClose}
        >
          <FaTimes />
        </button>
        <h2 className="text-2xl font-bold mb-4">User Information</h2>
        <p><strong>Username:</strong> {user.username}</p>
        <p><strong>Name:</strong> {user.name}</p>
        <p><strong>Email:</strong> {user.email}</p>
        <p><strong>Phone:</strong> {user.phone}</p>
        <div className="mt-4 flex justify-end space-x-2">
          <button className="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600">
            <FaEdit className="inline-block mr-1" /> Edit
          </button>
          <button className="bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600">
            <FaTrash className="inline-block mr-1" /> Delete
          </button>
        </div>
      </div>
    </div>
  );
};

const PostManagement = () => (
  <div className="bg-white shadow rounded-lg p-6">
    <h2 className="text-xl font-semibold mb-4">Post Management</h2>
    <p>Manage and moderate user posts, comments, and content.</p>
  </div>
);

const TransactionManagement = () => (
  <div className="bg-white shadow rounded-lg p-6">
    <h2 className="text-xl font-semibold mb-4">Transaction Management</h2>
    <p>View and manage user transactions, payments, and financial records.</p>
  </div>
);

const CategoryManagement = () => (
  <div className="bg-white shadow rounded-lg p-6">
    <h2 className="text-xl font-semibold mb-4">Category & Filter Management</h2>
    <p>Create and manage categories and filters for posts and content.</p>
  </div>
);

const PackageManagement = () => (
  <div className="bg-white shadow rounded-lg p-6">
    <h2 className="text-xl font-semibold mb-4">Package and Promotion Management</h2>
    <p>Create and manage subscription packages and promotional offers.</p>
  </div>
);

const SiteAnalytics = () => (
  <div className="bg-white shadow rounded-lg p-6">
    <h2 className="text-xl font-semibold mb-4">Site Analytics</h2>
    <p>View site traffic, user engagement, and other important metrics.</p>
  </div>
);

const ContentModeration = () => (
  <div className="bg-white shadow rounded-lg p-6">
    <h2 className="text-xl font-semibold mb-4">Content Moderation</h2>
    <p>Review and moderate user-generated content to ensure community guidelines are followed.</p>
  </div>
);

const NotificationManagement = () => (
  <div className="bg-white shadow rounded-lg p-6">
    <h2 className="text-xl font-semibold mb-4">Notification Management</h2>
    <p>Manage system notifications and user communication preferences.</p>
  </div>
);

const SupportFeedback = () => (
  <div className="bg-white shadow rounded-lg p-6">
    <h2 className="text-xl font-semibold mb-4">Support & Feedback</h2>
    <p>Manage user support tickets and review user feedback.</p>
  </div>
);

const SystemSettings = () => (
  <div className="bg-white shadow rounded-lg p-6">
    <h2 className="text-xl font-semibold mb-4">System Settings</h2>
    <p>Configure global system settings and preferences.</p>
  </div>
);

const SecurityAccessControl = () => (
  <div className="bg-white shadow rounded-lg p-6">
    <h2 className="text-xl font-semibold mb-4">Security and Access Control</h2>
    <p>Manage admin access, roles, and security settings.</p>
  </div>
);

const Logout = () => (
  <div className="bg-white shadow rounded-lg p-6">
    <h2 className="text-xl font-semibold mb-4">Logout</h2>
    <p>Are you sure you want to log out?</p>
    <button className="mt-4 bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600">Confirm Logout</button>
  </div>
);

export default AdminDashboard;