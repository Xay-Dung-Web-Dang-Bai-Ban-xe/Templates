import React, { useState } from "react";
import { FaUser, FaEnvelope, FaPhone, FaClock, FaMapMarkerAlt, FaTachometerAlt, FaMotorcycle, FaPlus, FaBell, FaWallet, FaEdit, FaHistory, FaComments, FaLock, FaSignOutAlt, FaEye, FaChartLine, FaCalendarAlt, FaBox, FaPen, FaSync, FaTrash, FaDollarSign, FaHandshake, FaRocket, FaTimes } from "react-icons/fa";

const UserProfilePage = () => {
  const [selectedPost, setSelectedPost] = useState(null);
  const [isEditMode, setIsEditMode] = useState(false);
  const [activeView, setActiveView] = useState("detail");

  const user = {
    name: "John Doe",
    email: "john@example.com",
    phone: "+1 234 567 8900",
    image: "https://images.unsplash.com/photo-1560250097-0b93528c311a?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1074&q=80",
    accountBalance: 5000
  };

  const sidebarItems = [
    { icon: FaPlus, text: "Create a new post" },
    { icon: FaMotorcycle, text: "Your bike" },
    { icon: FaHistory, text: "Your posts" },
    { icon: FaBell, text: "Notifications" },
    { icon: FaWallet, text: "Top up balance" },
    { icon: FaEdit, text: "Edit profile" },
    { icon: FaHistory, text: "Transaction History" },
    { icon: FaComments, text: "Messages" },
    { icon: FaLock, text: "Change Password" },
    { icon: FaSignOutAlt, text: "Logout" }
  ];

  const userPosts = [
    { id: 1, title: "My first bike ride", date: "2023-05-01", status: "Active", reachCount: 1500, expirationDate: "2023-06-01", addedPackages: ["Premium", "Boost"], interactionCount: 250, description: "It was an amazing experience!" },
    { id: 2, title: "Mountain trail adventure", date: "2023-05-15", status: "Expired", reachCount: 2000, expirationDate: "2023-05-30", addedPackages: ["Standard"], interactionCount: 180, description: "Challenging but rewarding trail ride." },
    { id: 3, title: "City night ride", date: "2023-05-30", status: "Active", reachCount: 1200, expirationDate: "2023-06-30", addedPackages: ["Premium"], interactionCount: 120, description: "Exploring the city under the stars." }
  ];

  const handlePostClick = (post) => {
    setSelectedPost(post);
    setIsEditMode(false);
    setActiveView("detail");
  };

  const handleEditClick = () => {
    setIsEditMode(true);
    setActiveView("edit");
  };

  const handleCancelEdit = () => {
    setIsEditMode(false);
    setActiveView("detail");
  };

  const handleSaveEdit = (updatedPost) => {
    // Here you would typically send the updated post to your backend
    // For this example, we'll just update the local state
    const updatedPosts = userPosts.map(post =>
      post.id === updatedPost.id ? updatedPost : post
    );
    setSelectedPost(updatedPost);
    setIsEditMode(false);
    setActiveView("detail");
  };

  const handleRenewPost = () => {
    setActiveView("renew");
  };

  const handleDeletePost = () => {
    setActiveView("delete");
  };

  const handleTransactionHistory = () => {
    setActiveView("transactions");
  };

  const handleBoostPost = () => {
    setActiveView("boost");
  };

  const PostDetail = ({ post }) => (
    <div className="bg-white rounded-lg shadow-md p-6 mt-4">
      <h3 className="text-2xl font-semibold mb-4">{post.title}</h3>
      <div className="grid grid-cols-2 gap-4">
        <div>
          <p><FaEye className="inline mr-2" /> <span className="font-semibold">Status:</span> {post.status}</p>
          <p><FaChartLine className="inline mr-2" /> <span className="font-semibold">Reach Count:</span> {post.reachCount}</p>
          <p><FaCalendarAlt className="inline mr-2" /> <span className="font-semibold">Expiration Date:</span> {post.expirationDate}</p>
          <p><FaBox className="inline mr-2" /> <span className="font-semibold">Added Packages:</span> {post.addedPackages.join(", ")}</p>
          <p><FaHandshake className="inline mr-2" /> <span className="font-semibold">Interaction Count:</span> {post.interactionCount}</p>
        </div>
        <div>
          <button onClick={handleEditClick} className="w-full mb-2 bg-blue-500 text-white py-2 px-4 rounded hover:bg-blue-600"><FaPen className="inline mr-2" /> Edit Post</button>
          <button onClick={handleRenewPost} className="w-full mb-2 bg-green-500 text-white py-2 px-4 rounded hover:bg-green-600"><FaSync className="inline mr-2" /> Renew Post</button>
          <button onClick={handleDeletePost} className="w-full mb-2 bg-red-500 text-white py-2 px-4 rounded hover:bg-red-600"><FaTrash className="inline mr-2" /> Delete Post</button>
          <button onClick={handleTransactionHistory} className="w-full mb-2 bg-yellow-500 text-white py-2 px-4 rounded hover:bg-yellow-600"><FaDollarSign className="inline mr-2" /> Transaction History</button>
          <button onClick={handleBoostPost} className="w-full bg-purple-500 text-white py-2 px-4 rounded hover:bg-purple-600"><FaRocket className="inline mr-2" /> Boost Post</button>
        </div>
      </div>
    </div>
  );

  const EditPostForm = ({ post, onSave, onCancel }) => {
    const [editedPost, setEditedPost] = useState(post);

    const handleChange = (e) => {
      const { name, value } = e.target;
      setEditedPost(prev => ({ ...prev, [name]: value }));
    };

    const handleSubmit = (e) => {
      e.preventDefault();
      onSave(editedPost);
    };

    return (
      <form onSubmit={handleSubmit} className="bg-white rounded-lg shadow-md p-6 mt-4">
        <div className="mb-4">
          <label htmlFor="title" className="block text-sm font-medium text-gray-700">Title</label>
          <input
            type="text"
            id="title"
            name="title"
            value={editedPost.title}
            onChange={handleChange}
            className="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50"
          />
        </div>
        <div className="mb-4">
          <label htmlFor="description" className="block text-sm font-medium text-gray-700">Description</label>
          <textarea
            id="description"
            name="description"
            value={editedPost.description}
            onChange={handleChange}
            rows="3"
            className="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50"
          ></textarea>
        </div>
        <div className="mb-4">
          <label htmlFor="status" className="block text-sm font-medium text-gray-700">Status</label>
          <select
            id="status"
            name="status"
            value={editedPost.status}
            onChange={handleChange}
            className="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50"
          >
            <option value="Active">Active</option>
            <option value="Expired">Expired</option>
          </select>
        </div>
        <div className="flex justify-end space-x-2">
          <button type="button" onClick={onCancel} className="px-4 py-2 bg-gray-300 text-gray-800 rounded hover:bg-gray-400">Cancel</button>
          <button type="submit" className="px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600">Save Changes</button>
        </div>
      </form>
    );
  };

  const RenewPostView = ({ post }) => (
    <div className="bg-white rounded-lg shadow-md p-6 mt-4">
      <h3 className="text-2xl font-semibold mb-4">Renew Post: {post.title}</h3>
      <p className="mb-4">Current expiration date: {post.expirationDate}</p>
      <div className="mb-4">
        <label htmlFor="newExpirationDate" className="block text-sm font-medium text-gray-700">New Expiration Date</label>
        <input
          type="date"
          id="newExpirationDate"
          name="newExpirationDate"
          className="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50"
        />
      </div>
      <div className="flex justify-end space-x-2">
        <button onClick={() => setActiveView("detail")} className="px-4 py-2 bg-gray-300 text-gray-800 rounded hover:bg-gray-400">Cancel</button>
        <button className="px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600">Renew Post</button>
      </div>
    </div>
  );

  const DeletePostView = ({ post }) => (
    <div className="bg-white rounded-lg shadow-md p-6 mt-4">
      <h3 className="text-2xl font-semibold mb-4">Delete Post: {post.title}</h3>
      <p className="mb-4">Are you sure you want to delete this post? This action cannot be undone.</p>
      <div className="flex justify-end space-x-2">
        <button onClick={() => setActiveView("detail")} className="px-4 py-2 bg-gray-300 text-gray-800 rounded hover:bg-gray-400">Cancel</button>
        <button className="px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600">Delete Post</button>
      </div>
    </div>
  );

  const TransactionHistoryView = ({ post }) => (
    <div className="bg-white rounded-lg shadow-md p-6 mt-4">
      <h3 className="text-2xl font-semibold mb-4">Transaction History: {post.title}</h3>
      <ul className="divide-y divide-gray-200">
        <li className="py-4">
          <p className="text-lg font-medium text-gray-900">Initial Post Creation</p>
          <p className="text-sm text-gray-500">Date: {post.date}</p>
          <p className="text-sm text-gray-500">Amount: $50</p>
        </li>
        <li className="py-4">
          <p className="text-lg font-medium text-gray-900">Premium Package Added</p>
          <p className="text-sm text-gray-500">Date: {post.date}</p>
          <p className="text-sm text-gray-500">Amount: $30</p>
        </li>
      </ul>
      <button onClick={() => setActiveView("detail")} className="mt-4 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600">Back to Post</button>
    </div>
  );

  const BoostPostView = ({ post }) => (
    <div className="bg-white rounded-lg shadow-md p-6 mt-4">
      <h3 className="text-2xl font-semibold mb-4">Boost Post: {post.title}</h3>
      <p className="mb-4">Choose a boost package to increase your post's visibility:</p>
      <div className="grid grid-cols-3 gap-4 mb-4">
        <div className="border p-4 rounded">
          <h4 className="font-semibold">Basic Boost</h4>
          <p>Increase reach by 50%</p>
          <p className="font-bold">$10</p>
        </div>
        <div className="border p-4 rounded">
          <h4 className="font-semibold">Pro Boost</h4>
          <p>Increase reach by 100%</p>
          <p className="font-bold">$20</p>
        </div>
        <div className="border p-4 rounded">
          <h4 className="font-semibold">Ultra Boost</h4>
          <p>Increase reach by 200%</p>
          <p className="font-bold">$30</p>
        </div>
      </div>
      <div className="flex justify-end space-x-2">
        <button onClick={() => setActiveView("detail")} className="px-4 py-2 bg-gray-300 text-gray-800 rounded hover:bg-gray-400">Cancel</button>
        <button className="px-4 py-2 bg-purple-500 text-white rounded hover:bg-purple-600">Apply Boost</button>
      </div>
    </div>
  );

  return (
    <div className="container mx-auto px-4 py-8 flex">
      <div className="w-1/4 bg-white rounded-lg shadow-md p-6 mr-8">
        <div className="flex flex-col items-center mb-6">
          <img
            src={user.image}
            alt={user.name}
            className="w-32 h-32 rounded-full object-cover mb-4"
          />
          <h2 className="text-2xl font-semibold">{user.name}</h2>
          <p className="text-gray-600">{user.email}</p>
          <p className="text-gray-600">{user.phone}</p>
          <div className="mt-4 bg-blue-100 rounded-full px-4 py-2">
            <span className="font-semibold">Balance: </span>
            <span className="text-blue-600 font-bold">${user.accountBalance.toLocaleString()}</span>
          </div>
        </div>
        <ul>
          {sidebarItems.map((item, index) => (
            <li key={index} className="mb-2">
              <button className="w-full text-left px-4 py-2 rounded-lg hover:bg-gray-100 transition duration-300 flex items-center">
                <item.icon className="mr-3 text-gray-600" />
                <span>{item.text}</span>
              </button>
            </li>
          ))}
        </ul>
      </div>
      <div className="w-3/4 bg-white rounded-lg shadow-md p-6">
        <h1 className="text-3xl font-bold mb-6">Welcome, {user.name}!</h1>
        <p className="text-gray-700 mb-4">This is your profile dashboard. Here you can manage your account, create new posts, view your bikes, and more.</p>
        <div className="grid grid-cols-2 gap-6">
          <div className="bg-blue-50 rounded-lg p-6">
            <h3 className="text-xl font-semibold mb-4">Quick Actions</h3>
            <ul>
              <li className="mb-2">
                <button className="text-blue-600 hover:underline">Create a new post</button>
              </li>
              <li className="mb-2">
                <button className="text-blue-600 hover:underline">View your bikes</button>
              </li>
              <li className="mb-2">
                <button className="text-blue-600 hover:underline">Check notifications</button>
              </li>
            </ul>
          </div>
          <div className="bg-green-50 rounded-lg p-6">
            <h3 className="text-xl font-semibold mb-4">Account Summary</h3>
            <p><span className="font-semibold">Total Posts:</span> {userPosts.length}</p>
            <p><span className="font-semibold">Bikes Listed:</span> 3</p>
            <p><span className="font-semibold">Messages:</span> 5 unread</p>
          </div>
        </div>
        <div className="mt-8">
          <h3 className="text-2xl font-semibold mb-4">Your Posts</h3>
          <ul className="divide-y divide-gray-200">
            {userPosts.map((post) => (
              <li key={post.id} className="py-4 cursor-pointer" onClick={() => handlePostClick(post)}>
                <div className="flex justify-between">
                  <p className="text-lg font-medium text-gray-900">{post.title}</p>
                  <p className="text-sm text-gray-500">{post.date}</p>
                </div>
              </li>
            ))}
          </ul>
          {selectedPost && activeView === "detail" && <PostDetail post={selectedPost} />}
          {selectedPost && activeView === "edit" && (
            <EditPostForm 
              post={selectedPost} 
              onSave={handleSaveEdit} 
              onCancel={handleCancelEdit} 
            />
          )}
          {selectedPost && activeView === "renew" && <RenewPostView post={selectedPost} />}
          {selectedPost && activeView === "delete" && <DeletePostView post={selectedPost} />}
          {selectedPost && activeView === "transactions" && <TransactionHistoryView post={selectedPost} />}
          {selectedPost && activeView === "boost" && <BoostPostView post={selectedPost} />}
        </div>
      </div>
    </div>
  );
};

export default UserProfilePage;
